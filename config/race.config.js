const BEFORE_RACE_TIME_AMMOUNT = 15 * 1000;
const RACE_TIME_LIMIT = 20 * 1000;
const TIME_FOR_REWARDING = 10 * 1000;

const ROOM_WAITING = 'wait';
const ROOM_RACING = 'run';

const MSG_STAT_WAITING_FOR_START = 'STAT_WAITING_FOR_START';
const MSG_STAT_IN_PROGRESS = 'STAT_IN_PROGRESS';
const MSG_STAT_REWARDING = 'STAT_REWARDING';
const MSG_STAT_WAITING_FOR_START_RELOAD = 'STAT_WAITING_FOR_START_RELOAD';

const MSG_NEW_COMPETITOR = 'NEW_COMPETITOR';
const MSG_COMPETITOR_LEAVE = 'COMPETITOR_LEAVE';

const RACE_STAT_WAITING_FOR_START = 0;
const RACE_STAT_IN_PROGRESS = 1;
const RACE_STAT_REWARDING = 2;
const RACE_STAT_SEQ = [RACE_STAT_WAITING_FOR_START, RACE_STAT_IN_PROGRESS, RACE_STAT_REWARDING];

const TIMER_TYPE_WAITING_FOR_START = 0;
const TIMER_TYPE_IN_PROGRESS = 1;
const TIMER_TYPE_REWARDING = 2;
const TIMER_TYPE_SEQ = [TIMER_TYPE_WAITING_FOR_START, TIMER_TYPE_IN_PROGRESS, TIMER_TYPE_REWARDING];

module.exports = {
  BEFORE_RACE_TIME_AMMOUNT,
  RACE_TIME_LIMIT,
  TIME_FOR_REWARDING,
  ROOM_WAITING,
  ROOM_RACING,
  MSG_STAT_WAITING_FOR_START,
  MSG_STAT_IN_PROGRESS,
  MSG_STAT_REWARDING,
  MSG_STAT_WAITING_FOR_START_RELOAD,
  MSG_NEW_COMPETITOR,
  MSG_COMPETITOR_LEAVE,
  RACE_STAT_WAITING_FOR_START,
  RACE_STAT_IN_PROGRESS,
  RACE_STAT_REWARDING,
  RACE_STAT_SEQ,
  TIMER_TYPE_WAITING_FOR_START,
  TIMER_TYPE_IN_PROGRESS,
  TIMER_TYPE_REWARDING,
  TIMER_TYPE_SEQ
}